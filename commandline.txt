# print hello world to output
echo "hello world"

#print current working dir
echo $(pwd)

#list files
ls

#list file contents
cat access.log

#Last 5 line of access.log
tail -n 5 access.log      # on same lines head -n 5 access.log gives first 5 lines

# Print the lines of access.log file which  have GET string
cat access.log|grep "GET"

#It will returns the line of files where chorme is present
find . -exec grep chrome {} \;

#it will return the filename along with the line where chrome is present
find . -exec grep chrome {} +

#find files which have string as content
grep -l "500" *

# Print all files in the current directory,# one per line (not the path, just the filename)# that contain the string "500".
find -H -name "access.log*"

# Print all matching lines (without the filename or the file path) in all files under the current directory that start with "access.log" that contain the string "500". Note that there are no files named "access.log" in the current directory,you will need to search recursively.
find . -type f -name "access.log**" -exec grep "500" {} \;


# Extract all IP addresses from files # that start with "access.log" printing one # IP address per line.
find . -type f -name "access.log*" -exec grep -oE "\b([0-9]{1,3}\.){3}[0-9]{1,3}\b" {} \;

# Delete all of the files in this challenge # directory including all subdirectories and # their contents.
rm -r $(pwd)/{*,.*}

# Count the number of files in the current # working directory. Print the number of # files as a single integer.
ls -A $(pwd)|wc -l            # -A does not count . and ..

# Print the contents of access.log # sorted.
cat access.log|sort

# Print the number of lines # in access.log that contain the string # "GET".
find . -type f -name "access.log" -exec grep "GET" {} \;|wc -l

# The file split-me.txt contains a list of# numbers separated by a ';' character.# Split the numbers on the ';' character,
# one number per line.








